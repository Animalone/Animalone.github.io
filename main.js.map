{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/account-storage.service.ts","webpack:///./src/app/auth/accountViewModel.ts","webpack:///./src/app/auth/api.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile-edit/profile-edit.component.css","webpack:///./src/app/profile-edit/profile-edit.component.html","webpack:///./src/app/profile-edit/profile-edit.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\n\nconst routes: Routes = [{\n        path: 'register',\n        component: RegisterComponent\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'edit',\n        component: ProfileEditComponent\n    }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Welcome to {{ title }}!</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\" routerLinkActive=\\\"active\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"#\\\">Home</a></li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"login\\\">Login</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'website-profile';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nconst USERNAME_KEY = 'AuthUsername';\nconst NAME_KEY = 'Authname';\nconst ADDRESS_KEY = 'AuthAddress';\nconst EMAIL_KEY = 'AuthEMAIL';\nconst DATE_KEY = 'AuthDATE';\nconst PASSWORD_KEY = \"PASS_KEY\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountStorageService {\n\n  constructor() { }\n  public signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveUsername(username: string) {\n    window.sessionStorage.removeItem(USERNAME_KEY);\n    window.sessionStorage.setItem(USERNAME_KEY, username);\n  }\n\n  public getUsername(): string {\n    return sessionStorage.getItem(USERNAME_KEY);\n  }\n\n  public saveName(name: string) {\n    window.sessionStorage.removeItem(NAME_KEY);\n    window.sessionStorage.setItem(NAME_KEY, name);\n  }\n\n  public getName(): string {\n    return sessionStorage.getItem(NAME_KEY);\n  }\n\n  public saveAddress(address: string) {\n    window.sessionStorage.removeItem(ADDRESS_KEY);\n    window.sessionStorage.setItem(ADDRESS_KEY, address);\n  }\n\n  public getAddress(): string {\n    return sessionStorage.getItem(ADDRESS_KEY);\n  }\n\n  public saveEmail(email: string) {\n    window.sessionStorage.removeItem(EMAIL_KEY);\n    window.sessionStorage.setItem(EMAIL_KEY, email);\n  }\n\n  public getEmail(): string {\n    return sessionStorage.getItem(EMAIL_KEY);\n  }\n\n  public saveMyDate(date: string) {\n    window.sessionStorage.removeItem(DATE_KEY);\n    window.sessionStorage.setItem(DATE_KEY, date);\n  }\n\n  public getMyDate(): string {\n    return sessionStorage.getItem(DATE_KEY);\n  }\n\n  public savePassword(password: string) {\n    window.sessionStorage.removeItem(PASSWORD_KEY);\n    window.sessionStorage.setItem(PASSWORD_KEY, password);\n  }\n\n  public getPassword(): string {\n    return sessionStorage.getItem(PASSWORD_KEY);\n  }\n}\n","export class AccountViewModel {\n    userName: string;\n    name: string;\n    password: string;\n    email: string;\n    birthDate: string;\n    address: string;\n    \n    constructor(userName: string, name: string, password: string, email: string, birthDate: string, address: string) {\n        this.name = name;\n        this.userName = userName;\n        this.password = password;\n        this.email = email;\n        this.birthDate = birthDate;\n        this.address = address;\n    }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {AccountViewModel} from \"./accountViewModel\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private BASE_URL = \"https://n736i2jxrb.execute-api.ap-southeast-2.amazonaws.com/dev\";\n  public profile_URL = `${this.BASE_URL}/profile`;\n  public login_URL = `${this.BASE_URL}/login`;\n  // private  httpOptions = {\n  //   headers: new HttpHeaders({\n  //     'Content-Type':  'application/json',\n  //     \"Access-Control-Allow-Origin\":\"*\"\n  //   })\n  // };\n  constructor(private http: HttpClient) {}\n  registerAccount(account: AccountViewModel): Observable<any> {\n    return this.http.post(this.profile_URL, account);\n  }\n\n  loginAccount(account: AccountViewModel): Observable<any> {\n    return this.http.post(this.login_URL, account);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"isLoggedIn; else loggedOut\\\">\\n    <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n      <div>\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" value ={{form.username}} />\\n      </div>\\n      <div>\\n        <label for=\\\"name\\\">Name</label>\\n        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" value ={{form.name}} />\\n      </div>\\n      <div>\\n        <label for=\\\"name\\\">Email</label>\\n        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" value ={{form.email}} />\\n      </div>\\n      <div>\\n        <label for=\\\"name\\\">Birth date</label>\\n        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" value ={{form.date}} />\\n      </div>\\n      <div>\\n        <label for=\\\"name\\\">Address</label>\\n        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" value ={{form.inputAddress}} />\\n      </div>\\n      <br>\\n      <div class=\\\"row col-sm-6\\\">\\n        <a href=\\\"edit\\\" class=\\\"btn btn-success\\\">Edit Profile</a>\\n      </div>\\n      <div class=\\\"row col-sm-6\\\">\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"logout()\\\">Logout</button>\\n      </div>\\n    </div>\\n</div>\\n\\n<ng-template #loggedOut>\\n  <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n          required />\\n        <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n          <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n          required />\\n        <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Login</button>\\n        <div *ngIf=\\\"f.submitted && isLoginFailed\\\" class=\\\"alert alert-danger\\\">\\n          Login failed: {{errorMessage}}\\n        </div>\\n      </div>\\n    </form>\\n    <hr />\\n    <p>Don't have an account?</p>\\n    <a href=\\\"register\\\" class=\\\"btn btn-success\\\">Sign Up</a>\\n  </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { AccountViewModel } from '../auth/accountViewModel';\nimport {ApiService} from \"../auth/api.service\";\nimport { AccountStorageService } from '../auth/account-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  accountViewModel: AccountViewModel;\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  constructor(private apiService: ApiService, private accountStorage: AccountStorageService) { }\n\n  ngOnInit() {\n    if (this.accountStorage.getUsername()) {\n      this.isLoggedIn = true;\n      this.form.username = this.accountStorage.getUsername();\n      this.form.email = this.accountStorage.getEmail();\n      this.form.name = this.accountStorage.getName();\n      this.form.date = this.accountStorage.getMyDate();\n      this.form.inputAddress = this.accountStorage.getAddress();\n    }\n  }\n  onSubmit() {\n    console.log(this.form);\n    this.accountViewModel = new AccountViewModel(\n      this.form.username,\n      \" \",\n      this.form.password,\n      \" \",\n      \" \",\n      \" \");\n    this.apiService.loginAccount(this.accountViewModel).subscribe(\n      data => {\n        console.log(data);\n        this.isLoggedIn = true;\n        this.isLoginFailed = false;\n        this.accountStorage.saveUsername(data.user_name);\n        this.accountStorage.saveName(data.name);\n        this.accountStorage.saveAddress(data.address);\n        this.accountStorage.saveEmail(data.email);\n        this.accountStorage.saveMyDate(data.birthDate);\n        this.form.username = this.accountStorage.getUsername();\n        this.form.email = this.accountStorage.getEmail();\n        this.form.name = this.accountStorage.getName();\n        this.form.date = this.accountStorage.getMyDate();\n        this.form.inputAddress = this.accountStorage.getAddress();\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isLoginFailed = true;\n      })\n  }\n  logout(){\n    this.accountStorage.signOut();\n    this.isLoggedIn = false;\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtZWRpdC9wcm9maWxlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Your name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder={{name}} [(ngModel)]=\\\"form.name\\\" #name=\\\"ngModel\\\" required />\\n      <div *ngIf=\\\"f.submitted && name.invalid\\\">\\n        <div *ngIf=\\\"name.errors.required\\\">Name is required</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input type=\\\"text\\\" readonly class=\\\"form-control\\\" value ={{username}} name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n        required />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n        required minlength=\\\"6\\\" />\\n      <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n        <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n        <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder={{email}} [(ngModel)]=\\\"form.email\\\" #email=\\\"ngModel\\\" required email />\\n      <div *ngIf=\\\"f.submitted && email.invalid\\\">\\n        <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n        <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"date\\\">Birth Date</label>\\n      <input class=\\\"form-control\\\" name=\\\"date\\\" placeholder=\\\"MM/DD/YYYY\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.date\\\" #date=\\\"ngModel\\\" required date />\\n      <div *ngIf=\\\"f.submitted && date.invalid\\\">\\n        <div *ngIf=\\\"date.errors.required\\\">Birth Date is required</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputAddress\\\">Address</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"inputAddress\\\" placeholder={{inputAddress}} [(ngModel)]=\\\"form.inputAddress\\\" #inputAddress=\\\"ngModel\\\" required inputAddress />\\n        <div *ngIf=\\\"f.submitted && inputAddress.invalid\\\">\\n        \\t<div *ngIf=\\\"inputAddress.errors.required\\\">Address is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button href=\\\"login\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      <div *ngIf=\\\"f.submitted\\\" class=\\\"alert alert-warning\\\">\\n        Signup failed!<br/>{{errorMessage}}\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AccountStorageService } from '../auth/account-storage.service';\nimport {ApiService} from \"../auth/api.service\";\nimport { AccountViewModel } from '../auth/accountViewModel';\nimport {HttpClient} from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styleUrls: ['./profile-edit.component.css']\n})\nexport class ProfileEditComponent implements OnInit {\n  isUpdateFail = false;\n  form: any = {};\n  errorMessage = '';\n  accountViewModel: AccountViewModel;\n  constructor(private router: Router, private accountStorage: AccountStorageService, private apiService: ApiService) { }\n\n  ngOnInit() {\n  \tif (this.accountStorage.getUsername()) {\n      this.form.username = this.accountStorage.getUsername();\n      this.form.email = this.accountStorage.getEmail();\n      this.form.name = this.accountStorage.getName();\n      this.form.date = this.accountStorage.getMyDate();\n      this.form.inputAddress = this.accountStorage.getAddress();\n    }\n  }\n  onSubmit() {\n    console.log(this.form);\n    this.accountViewModel = new AccountViewModel(\n      this.form.username,\n      this.form.name,\n      this.form.password,\n      this.form.email,\n      this.form.date,\n      this.form.inputAddress);\n    this.accountStorage.saveUsername(this.form.username);\n    this.accountStorage.saveName(this.form.name);\n    this.accountStorage.saveAddress(this.form.inputAddress);\n    this.accountStorage.saveEmail(this.form.email);\n    this.accountStorage.saveMyDate(this.form.date);\n    this.apiService.registerAccount(this.accountViewModel).subscribe(\n      data => {\n        console.log(data);\n        this.isUpdateFail = false;\n        // this.reloadPage();\n        this.router.navigate(['login']);\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isUpdateFail = true;\n      }\n    );\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"isSignedUp; else signupForm\\\">\\n  Your registration is successful. Please login!\\n</div>\\n\\n<ng-template #signupForm>\\n  <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Your name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.name\\\" #name=\\\"ngModel\\\" required />\\n        <div *ngIf=\\\"f.submitted && name.invalid\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">Name is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n          required />\\n        <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n          <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n          required/>\\n        <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" #email=\\\"ngModel\\\" required email />\\n        <div *ngIf=\\\"f.submitted && email.invalid\\\">\\n          <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n          <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"date\\\">Birth Date</label>\\n        <input class=\\\"form-control\\\" name=\\\"date\\\" placeholder=\\\"MM/DD/YYYY\\\" type=\\\"text\\\" [(ngModel)]=\\\"form.date\\\" #date=\\\"ngModel\\\" required date />\\n        <div *ngIf=\\\"f.submitted && date.invalid\\\">\\n          <div *ngIf=\\\"date.errors.required\\\">Birth Date is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAddress\\\">Address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"inputAddress\\\" placeholder=\\\"Your Address\\\" [(ngModel)]=\\\"form.inputAddress\\\" #inputAddress=\\\"ngModel\\\" required inputAddress />\\n          <div *ngIf=\\\"f.submitted && inputAddress.invalid\\\">\\n          \\t<div *ngIf=\\\"inputAddress.errors.required\\\">Address is required</div>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Register</button>\\n        <div *ngIf=\\\"f.submitted && isSignUpFailed\\\" class=\\\"alert alert-warning\\\">\\n          Signup failed!<br/>{{errorMessage}}\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport {ApiService} from \"../auth/api.service\";\nimport { AccountViewModel } from '../auth/accountViewModel';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {};\n  accountViewModel: AccountViewModel;\n  isSignedUp = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit() {\n  }\n  onSubmit() {\n    console.log(this.form);\n    this.accountViewModel = new AccountViewModel(\n      this.form.username,\n      this.form.name,\n      this.form.password,\n      this.form.email,\n      this.form.date,\n      this.form.inputAddress);\n\n    this.apiService.registerAccount(this.accountViewModel).subscribe(\n      data => {\n        console.log(data);\n        this.isSignedUp = true;\n        this.isSignUpFailed = false;\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}